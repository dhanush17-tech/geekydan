{"pageProps":{"post":{"content":"\n\nWelcome, Flutter enthusiasts and future mobile app developers! If you're looking to create dynamic, scalable, and real-time mobile applications, learning how to perform CRUD (Create, Read, Update, Delete) operations with Firestore in Flutter is essential. This beginner-friendly guide will walk you through the fundamental steps of integrating Firestore with Flutter and how to work with photos within your app.\n\n\nBefore diving in, make sure you have the following ready:\n\n- A basic understanding of Dart and Flutter.\n- Flutter installed on your machine.\n- And make sure you were your thinking caps !!\n\n## Step 1: Create a Firebase Project\nNavigate to your Firebase Console and click Add Project.\n\n![Create Firebase Project 1](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an64chk2dxmit0l9ph3d.png)\n\n## Step 2: Setup Your Firebase Project\nGive your project a name and enable google analytics.\n\n![Create Firebase Project 2](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68jutmrmzx7abbmk0dae.png)\n\n![Create Firebase Project 3](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zej57sxtn1ykbkqxxypw.png)\n\n\n![Create Firebase Project 4](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3md1p8mlqxd658b89vr0.png)\n\n\n## Step 3: Connecting the Flutter App to the Firebase Project\nTo connect the flutter app to firebase, **we must install firebase-cli. (PS: this requires nodejs to be installed https://nodejs.org/en/download)**\n\n```javascript \nnpm install -g firebase-tools\n```\n```javascript\nfirebase login\n```\n\nNow go ahead and click the Flutter icon on the dashboard of your firebase project.\n\n\n![Connect Flutter App to Firebase 1](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3ttgnu23lu4rccwwtt9.png)\n\n![Connect Flutter App to Firebase 2](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/at8ch4tcs8kq6nrrrjta.png)\n\nRun the commands and you'll have your Firebase Project connected to your Flutter App\n\nNow navigate to `main.dart` and paste this code just above your `runApp()`\n\n![Initialize Firebase in Flutter App](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3jo3z0uw3l3gmsmwruv.png)\n\n\n## Lesssgoooo ðŸŽ‰ you've SUCCESSFULLY Connected your Flutter app to Firebase\n\nNow you just have to navigate to Firestore and enable the feature\n\n\n![Firestore Enabling](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhkpi7uets25lphjuhm3.png)\n![Firestore Enabling 2](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxvahub9rgwjwbnaiun6.png)\n\n\n\n## Step 4: Adding Dependencies\n\nFirst, add the necessary Firestore package to your pubspec.yaml file:\n\n```dart \ndependencies:\n  flutter:\n    sdk: flutter\n  cloud_firestore: ^latest_version\n  firebase_storage: ^latest_version\n```\n\nAfter saving the file, run flutter pub get in your terminal to install the packages.\n\n## CRUD Operations\n\nCreate (Adding Data)\nTo add data to Firestore, you'll use the collection and add methods:\n\n```dart \nFirebaseFirestore.instance.collection('users').add({\n  'name': 'Jane Doe',\n  'age': 30,\n  'email': 'jane.doe@example.com',\n});\n```\n\nRead (Retrieving Data)\nTo fetch data, you'll use collection and get:\n\n```dart \nFirebaseFirestore.instance.collection('users').get().then((querySnapshot) {\n  querySnapshot.docs.forEach((result) {\n    print(result.data());\n  });\n});\n```\nUpdate (Modifying Data)\nFor updating a document, you'll need its ID:\n\n```dart \nFirebaseFirestore.instance.collection('users').doc(documentId).update({\n  'age': 31,\n});\n```\n\nDelete (Removing Data)\nTo delete a document, also use the document's ID:\n\n```dart \nFirebaseFirestore.instance.collection('users').doc(documentId).delete();\n```\nIntegrating Photos with Firestore and Flutter\nWorking with photos involves storing the images in Firebase Storage and keeping references in Firestore.\n\n\n## Uploading Images\nApart from just Firestore, Firebase offers a lot of other features to like Firebase Storage and much more....\n\nNow lets take a loot at how to use Firebase Storage!!\n\nStep 1: Uploading Images into the Firebase Storage\n```dart \nFirebaseStorage storage = FirebaseStorage.instance;\nTaskSnapshot snapshot = await storage.ref('uploads/user-profile.jpg').putFile(imageFile);\nString downloadUrl = await snapshot.ref.getDownloadURL();\n```\n\nStep 2: Storing Image URLs in Firestore\nAfter uploading, save the image URL to Firestore:\n\n```dart \nFirebaseFirestore.instance.collection('users').doc(userId).update({\n  'profileImageUrl': downloadUrl,\n});\n```\n\nStep 3: Displaying Images in Flutter\nTo display the image, use the Image.network widget with the Firestore URL:\n\n```dart \nImage.network(downloadUrl);\n```\n\n## Congratulations! ðŸŽ‰ðŸŽ‰\n You now have a foundational understanding of CRUD operations in Firestore with Flutter and how to integrate photos into your app. As you continue your journey, remember that practice is key to mastery. Keep experimenting, building, and learning.\n\nHappy coding!","data":{"title":"Simplifying CRUD Operations with Firestore and Flutter: A Beginner's Guide","subtitle":"If you're looking to create dynamic, scalable, and real-time mobile applications, learning how to perform CRUD (Create, Read, Update, Delete) operations with Firestore in Flutter is essential.","date":"Nov 7, 2024","imgUrl":"https://res.cloudinary.com/practicaldev/image/fetch/s--Q5ygWDCK--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s52a2q3m3ujrxhdtf4cr.png"}}},"__N_SSG":true}